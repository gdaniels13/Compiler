#header of the file needs to happen here
#loading int into register
	li $8,	434
	 sw 	$8, 	4($gp)
#looking up id 
	 lw 	$9, 	4($gp)

	 sw 	$9, 	0($gp)
#loading character into register
	li $10,	'\n'
#Write Statement1
#looking up id 
	 lw 	$11, 	4($gp)

	li	 $v0, 	1 
	move	 $a0,	 $11
	syscall
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str0
	syscall
#Write Statement1
#looking up id 
	 lw 	$11, 	0($gp)

	li	 $v0, 	1 
	move	 $a0,	 $11
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $10
	syscall
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str1
	syscall
#read expression
	 li 	 $v0, 	 5
	syscall
	 sw 	$v0, 	4($gp)

#loading character into register
	li $10,	'\n'
#Write Statement1
#looking up id 
	 lw 	$11, 	4($gp)

	li	 $v0, 	1 
	move	 $a0,	 $11
	syscall
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str2
	syscall
#Write Statement1
#looking up id 
	 lw 	$11, 	0($gp)

	li	 $v0, 	1 
	move	 $a0,	 $11
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $10
	syscall
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str3
	syscall
#read expression
	 li 	 $v0, 	 5
	syscall
	 sw 	$v0, 	0($gp)

#loading character into register
	li $10,	'\n'
#Write Statement1
#looking up id 
	 lw 	$11, 	4($gp)

	li	 $v0, 	1 
	move	 $a0,	 $11
	syscall
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str4
	syscall
#Write Statement1
#looking up id 
	 lw 	$11, 	0($gp)

	li	 $v0, 	1 
	move	 $a0,	 $11
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $10
	syscall
#loading character into register
	li $10,	'\n'
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $10
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#Add two expressions
	 add 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str5
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#and expression
	 li 	$10,	0
	 or 	$11,	$11,	$10
	 sne 	$10,	$11,	$10

#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str6
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#and expression
	 li 	$10,	0
	 seq 	$11,	$11,	$10
	 seq 	$12,	$12,	$10
	 seq 	$10,	$12,	$11

#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str7
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#subtract two expressions
	 sub 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str8
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#multiply two expressions
	 mult 	$11,	$12
	 mflo 	$10
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str9
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#Divide two expressions
	 div 	$11,	$12
	 mflo 	$10
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str10
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#Divide two expressions
	 div 	$11,	$12
	 mfhi 	$10
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str11
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#== expressions
	 seq 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str12
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#< expressions
	 slt 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str13
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#> expressions
	 sgt 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str14
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#<> expressions
	 sne 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str15
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#<= expressions
	 sle 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str16
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#looking up id 
	 lw 	$11, 	4($gp)

#looking up id 
	 lw 	$12, 	0($gp)

#>= expressions
	 sge 	$10,	$11,	$12
#loading character into register
	li $11,	'\n'
#Write Statement4
	li	 $v0, 	4 
	la	 $a0,	 str17
	syscall
#Write Statement2
	li	 $v0, 	1 
	move	 $a0,	 $10
	syscall
#Write Statement3
	li	 $v0, 	11 
	move	 $a0,	 $11
	syscall
#Printing all the Strings
	.data
	str0:	.asciiz	"  "
	str1:	.asciiz	"Enter A:"
	str10:	.asciiz	"a/b="
	str11:	.asciiz	"a%b="
	str12:	.asciiz	"a=b="
	str13:	.asciiz	"a<b="
	str14:	.asciiz	"a>b="
	str15:	.asciiz	"a<>b="
	str16:	.asciiz	"a<=b="
	str17:	.asciiz	"a>=b="
	str2:	.asciiz	"  "
	str3:	.asciiz	"\nEnter b:"
	str4:	.asciiz	"  "
	str5:	.asciiz	"a+b="
	str6:	.asciiz	"a | b="
	str7:	.asciiz	"a & b="
	str8:	.asciiz	"a-b="
	str9:	.asciiz	"a*b="




#printing end of program
li	 $v0, 10
 syscall


